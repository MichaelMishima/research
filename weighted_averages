//exercise PI requested

import numpy as np
def rand_weight_ave (num):
    array = np.random.rand(num)
    errors=abs(array-np.average(array))
    weighted_ave=np.average(array,weights=errors)
    return weighted_ave;
    
    

import numpy as np
np.average?

#This function will approach the "best"/ true parameter of the population
#As n goes to infinity. If not then, the statistic is not a good 
#description of the population

#Weighted mean is a kind of average. Instead of each data point contributing
#equally to the final mean, some data points contribute more "weight" than
#others. If all weights are equal, weighted mean equals mean.


#Weighted Mean Formula
x_bar = sum(x_i * w_i)/sum(w_i)
#w= the weights, x= the value
